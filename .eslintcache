[{"C:\\code\\react-chef-app\\chefapp\\src\\index.js":"1","C:\\code\\react-chef-app\\chefapp\\src\\store.js":"2","C:\\code\\react-chef-app\\chefapp\\src\\App.js":"3","C:\\code\\react-chef-app\\chefapp\\src\\theme.js":"4","C:\\code\\react-chef-app\\chefapp\\src\\components\\FullScreenCircuralProgress.js":"5","C:\\code\\react-chef-app\\chefapp\\src\\state\\fullScreenCircuralProgress.js":"6","C:\\code\\react-chef-app\\chefapp\\src\\components\\Snackbars.js":"7","C:\\code\\react-chef-app\\chefapp\\src\\state\\snackbars.js":"8","C:\\code\\react-chef-app\\chefapp\\src\\components\\ScrollToTop.js":"9","C:\\code\\react-chef-app\\chefapp\\src\\components\\Drawer.js":"10","C:\\code\\react-chef-app\\chefapp\\src\\state\\drawer.js":"11","C:\\code\\react-chef-app\\chefapp\\src\\components\\AppBar.js":"12","C:\\code\\react-chef-app\\chefapp\\src\\views\\AddRecipe.js":"13","C:\\code\\react-chef-app\\chefapp\\src\\views\\Dashboard.js":"14","C:\\code\\react-chef-app\\chefapp\\src\\views\\UserRecipes.js":"15","C:\\code\\react-chef-app\\chefapp\\src\\views\\Recipes.js":"16","C:\\code\\react-chef-app\\chefapp\\src\\views\\ChangePassword.js":"17","C:\\code\\react-chef-app\\chefapp\\src\\components\\Ingredients.js":"18"},{"size":456,"mtime":1607253212005,"results":"19","hashOfConfig":"20"},{"size":555,"mtime":1607251994862,"results":"21","hashOfConfig":"20"},{"size":1240,"mtime":1607602097763,"results":"22","hashOfConfig":"20"},{"size":470,"mtime":1607085920622,"results":"23","hashOfConfig":"20"},{"size":985,"mtime":1607164609063,"results":"24","hashOfConfig":"20"},{"size":810,"mtime":1607162126903,"results":"25","hashOfConfig":"20"},{"size":945,"mtime":1607198290408,"results":"26","hashOfConfig":"20"},{"size":1276,"mtime":1607198182950,"results":"27","hashOfConfig":"20"},{"size":926,"mtime":1607254726199,"results":"28","hashOfConfig":"20"},{"size":1591,"mtime":1607601967708,"results":"29","hashOfConfig":"20"},{"size":572,"mtime":1607252161026,"results":"30","hashOfConfig":"20"},{"size":2791,"mtime":1607254558502,"results":"31","hashOfConfig":"20"},{"size":6485,"mtime":1610114825442,"results":"32","hashOfConfig":"20"},{"size":162,"mtime":1607601819463,"results":"33","hashOfConfig":"20"},{"size":171,"mtime":1607602111808,"results":"34","hashOfConfig":"20"},{"size":157,"mtime":1607602120594,"results":"35","hashOfConfig":"20"},{"size":175,"mtime":1607602107431,"results":"36","hashOfConfig":"20"},{"size":5921,"mtime":1610125700846,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"17906bo",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\code\\react-chef-app\\chefapp\\src\\index.js",[],["79","80"],"C:\\code\\react-chef-app\\chefapp\\src\\store.js",[],"C:\\code\\react-chef-app\\chefapp\\src\\App.js",[],"C:\\code\\react-chef-app\\chefapp\\src\\theme.js",[],"C:\\code\\react-chef-app\\chefapp\\src\\components\\FullScreenCircuralProgress.js",[],"C:\\code\\react-chef-app\\chefapp\\src\\state\\fullScreenCircuralProgress.js",["81"],"const ADD_CIRCURAL = 'fullScreenCircuralProgress/ADD_CIRCURAL'\r\nconst REMOVE_CIRCURAL = 'fullScreenCircuralProgress/REMOVE_CIRCURAL'\r\n\r\nconst addCircuralActionCreator = () => ({ type: ADD_CIRCURAL })\r\n\r\nconst removeCircuralActionCreator = () => ({ type: REMOVE_CIRCURAL })\r\n\r\nexport const circuralProgress = {\r\n  add: addCircuralActionCreator,\r\n  remove: removeCircuralActionCreator\r\n}\r\n\r\nconst initialState = {\r\n  circurals: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_CIRCURAL:\r\n      return {\r\n        ...state,\r\n        circurals: [...state.circurals, true]\r\n      }\r\n    case REMOVE_CIRCURAL:\r\n      return {\r\n        ...state,\r\n        circurals: state.circurals.filter((el, index) => index !== 0)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","C:\\code\\react-chef-app\\chefapp\\src\\components\\Snackbars.js",[],"C:\\code\\react-chef-app\\chefapp\\src\\state\\snackbars.js",["82"],"const ADD_SNACK = 'snackbars/ADD_SNACK'\r\nconst REMOVE_SNACK = 'snackbars/REMOVE_SNACK'\r\n\r\nconst colors = {\r\n    red: '#ff0000'\r\n  }\r\n\r\n\r\nexport const addSnackbar = (text, color = 'green', time = 3000) => (dispatch, getState) => {\r\n    const key = Date.now()\r\n    const rightColor = colors[color] || color\r\n    dispatch(addSnackActionCreator(text, rightColor, key))\r\n    setTimeout(()=>dispatch(removeSnackActionCreator(key)), time)\r\n}\r\nconst addSnackActionCreator = (text, color, key) => ({\r\n    type: ADD_SNACK,\r\n    text,\r\n    color,\r\n    key\r\n})\r\nconst removeSnackActionCreator = (key) => ({\r\n    type: REMOVE_SNACK,\r\n    key\r\n})\r\n\r\nconst initialState = {\r\n    bars: []\r\n}\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_SNACK:\r\n            return {\r\n                ...state,\r\n                bars: [{\r\n                    text: action.text,\r\n                    color: action.color,\r\n                    key: action.key\r\n                },\r\n                ...state.bars,\r\n                ]\r\n            }\r\n        case REMOVE_SNACK:\r\n            return {\r\n                ...state,\r\n                bars: state.bars.filter(el => el.key !== action.key)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","C:\\code\\react-chef-app\\chefapp\\src\\components\\ScrollToTop.js",[],"C:\\code\\react-chef-app\\chefapp\\src\\components\\Drawer.js",[],"C:\\code\\react-chef-app\\chefapp\\src\\state\\drawer.js",["83"],"const DRAWER_OPEN = 'drawer/OPEN'\r\nconst DRAWER_CLOSE = 'drawer/CLOSE'\r\n\r\nexport const openDrawerActionCreator = () => ({ type: DRAWER_OPEN })\r\nexport const closeDrawerActionCreator = () => ({ type: DRAWER_CLOSE })\r\n\r\nconst initialState = {\r\n    isOpen: false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case DRAWER_OPEN:\r\n      return {\r\n        ...state,\r\n        isOpen: true\r\n      }\r\n    case DRAWER_CLOSE:\r\n      return {\r\n        ...state,\r\n        isOpen: false\r\n      }\r\n    default:\r\n        return state\r\n    }\r\n}\r\n","C:\\code\\react-chef-app\\chefapp\\src\\components\\AppBar.js",[],"C:\\code\\react-chef-app\\chefapp\\src\\views\\AddRecipe.js",["84","85","86"],"import { TextField, InputAdornment, Typography, Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Ingredienst from '../components/Ingredients'\r\n\r\n\r\n\r\n\r\nconst MAX_NAME_LENGTH = 45\r\nconst MIN_NAME_LENGTH = 4\r\nconst MIN_DESCRIPTION_LENGTH = 20\r\nconst MAX_DESCRIPTION_LENGTH = 1500\r\nconst MAX_TIME = 240\r\n\r\n\r\nconst styles = {\r\n    div: { display: 'flex', flexDirection: 'column', alignItems: 'center' },\r\n    input: { maxWidth: 380, margin: '10px 0' },\r\n    title: { fontWeight: 'bold', margin: 30 },\r\n    link: { fontSize: '1.5rem', fontWeight: 'bold', cursor: 'pointer' },\r\n    randomPhoto: { marginTop: -10, marginBottom: 10, cursor: 'pointer', color: 'blue' }\r\n}\r\n\r\nconst AddRecipe = props => {\r\n\r\n    const [name, setName] = React.useState('')\r\n    const [nameError, setNameError] = React.useState(false)\r\n\r\n    const nameValidate = (value) => {\r\n        const validValue = value && value.replace(/\\s{2,}/g, ' ')\r\n        if (value !== validValue) {\r\n            setName(validValue)\r\n        }\r\n        const isError = !validValue || validValue.length < MIN_NAME_LENGTH\r\n        setNameError(isError)\r\n        return isError\r\n\r\n    }\r\n\r\n    const setValidName = (string) => {\r\n        if (string.length < MAX_NAME_LENGTH) {\r\n            setName(string)\r\n        }\r\n    }\r\n\r\n    const [description, setDescription] = React.useState('')\r\n    const [descriptionError, setDescriptionError] = React.useState(false)\r\n\r\n    const descriptionValidate = value => {\r\n        const validValue = value && value.replace(/\\s{2,}/g, ' ')\r\n        if (value !== validValue) {\r\n            setDescription(validValue)\r\n        }\r\n        const isError = !validValue || validValue.length < MIN_DESCRIPTION_LENGTH\r\n        setDescriptionError(isError)\r\n        return isError\r\n    }\r\n    const setValidDescription = string => {\r\n        if (string.length < MAX_DESCRIPTION_LENGTH) {\r\n            setDescription(string)\r\n        }\r\n    }\r\n\r\n    const [time, setTime] = React.useState('')\r\n    const [timeError, setTimeError] = React.useState(false)\r\n    const timeValidate = (value) => {\r\n        value = Number(Number(value).toFixed(2))\r\n        setTime(value)\r\n        const isError = value < 1\r\n        setTimeError(isError)\r\n        return isError\r\n    }\r\n    const setValidTime = value => {\r\n        setTime(value < 0 ? 0 : value > MAX_TIME ? MAX_TIME : value)\r\n    }\r\n\r\n    const [photo, setPhoto] = React.useState('')\r\n    const [photoError, setPhotoError] = React.useState(false)\r\n    const photoValidate = value => {\r\n        const isError = !value || !value.match(/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/)\r\n        setPhotoError(isError)\r\n        return isError\r\n    }\r\n    const [ingredients, setIngredients] = React.useState([])\r\n    const [ingredientsError, setIngredientsError] = React.useState(false)\r\n    const ingredientsValidate = value => {\r\n        const isError = value.length === 0\r\n        setIngredientsError(isError)\r\n        return isError\r\n    }\r\n\r\n    console.log(ingredients)\r\n\r\n    const inputs = [\r\n        {\r\n            label: 'Nazwa',\r\n            value: name,\r\n            onChange: setValidName,\r\n            error: nameError,\r\n            validate: nameValidate,\r\n            helperText: 'Zbyt krótka nazwa, minimum 4 znaki'\r\n        },\r\n        {\r\n            label: 'Składniki'\r\n        },\r\n        {\r\n            label: 'Sposób przyrządzenia',\r\n            value: description,\r\n            onChange: setValidDescription,\r\n            error: descriptionError,\r\n            validate: descriptionValidate,\r\n            helperText: 'Zbyt krótka nazwa, minimum 15 znaki',\r\n            multiline: true\r\n        },\r\n        {\r\n            label: 'Czas przyrządzenia',\r\n            value: time,\r\n            onChange: setValidTime,\r\n            error: timeError,\r\n            validate: timeValidate,\r\n            helperText: 'Podaj prawidłowy czas',\r\n            type: 'number',\r\n            InputProps: {\r\n                endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\r\n            }\r\n        },\r\n        {\r\n            label: 'Zdjęcie',\r\n            value: photo,\r\n            onChange: setPhoto,\r\n            error: photoError,\r\n            validate: photoValidate,\r\n            helperText: 'Podaj prawidłowy adres URL',\r\n            placeholder: 'http://'\r\n        },\r\n    ]\r\n    return (\r\n        <div\r\n            style={styles.div}\r\n        >\r\n            <Typography\r\n                style={styles.title}\r\n                align='center'\r\n                variant='h5'\r\n                color='secondary'\r\n            >\r\n                Dodaj przepis.\r\n        <br />\r\n        Przepis zostanie dodany do{' '}\r\n                <Typography\r\n                    style={styles.link}\r\n                    display='inline'\r\n                    color='primary'\r\n                    onClick={() => props.history.push('/your-recipes')}\r\n                >\r\n                    Twojej listy.\r\n        </Typography>\r\n            </Typography>\r\n\r\n            {inputs.map(input => input.label === 'Składniki' ?\r\n                <Ingredienst\r\n                    key={input.label}\r\n                    ingredients={ingredients}\r\n                    setIngredients={setIngredients}\r\n                />\r\n                :\r\n\r\n                <TextField\r\n                    kay={inputs.label}\r\n                    style={styles.input}\r\n                    variant='outlined'\r\n                    fullWidth\r\n                    label={input.label}\r\n                    value={input.value}\r\n                    error={input.error}\r\n                    helperText={input.error && input.helperText}\r\n                    onChange={evt => {\r\n                        input.onChange(evt.target.value)\r\n                        if (input.error) {\r\n                            input.validate(evt.target.value)\r\n                        }\r\n                    }}\r\n                    onBlur={() => input.validate(input.value)}\r\n                    multiline={input.multiline}\r\n                    type={input.type || 'text'}\r\n                    InputProps={input.InputProps}\r\n                    placeholder={input.placeholder}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddRecipe)\r\n","C:\\code\\react-chef-app\\chefapp\\src\\views\\Dashboard.js",[],"C:\\code\\react-chef-app\\chefapp\\src\\views\\UserRecipes.js",[],"C:\\code\\react-chef-app\\chefapp\\src\\views\\Recipes.js",[],"C:\\code\\react-chef-app\\chefapp\\src\\views\\ChangePassword.js",[],"C:\\code\\react-chef-app\\chefapp\\src\\components\\Ingredients.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":17,"column":1,"nodeType":"93","endLine":32,"endColumn":2},{"ruleId":"91","severity":1,"message":"92","line":29,"column":1,"nodeType":"93","endLine":50,"endColumn":2},{"ruleId":"91","severity":1,"message":"92","line":11,"column":1,"nodeType":"93","endLine":26,"endColumn":2},{"ruleId":"94","severity":1,"message":"95","line":1,"column":49,"nodeType":"96","messageId":"97","endLine":1,"endColumn":55},{"ruleId":"94","severity":1,"message":"98","line":85,"column":12,"nodeType":"96","messageId":"97","endLine":85,"endColumn":28},{"ruleId":"94","severity":1,"message":"99","line":86,"column":11,"nodeType":"96","messageId":"97","endLine":86,"endColumn":30},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'ingredientsError' is assigned a value but never used.","'ingredientsValidate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]